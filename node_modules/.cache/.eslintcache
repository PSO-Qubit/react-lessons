[{"C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\examples\\Joke\\Joke.jsx":"4","C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\examples\\Joke\\Counting.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":578,"mtime":1634934525280,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1129,"mtime":1634934176720,"results":"10","hashOfConfig":"7"},{"size":351,"mtime":1634934022884,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1nvlpsc",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\index.js",[],["24","25"],"C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\App.js",["26"],"C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\examples\\Joke\\Joke.jsx",["27"],"import { useEffect, useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Counting from \"./Counting\";\r\n\r\nfunction Joke() {\r\n    const QUO = Math.floor(1000/7);\r\n\r\n    const [isGhoul, setIsGhoul] = useState(false);\r\n    const [counts, setCounts] = useState(1000);\r\n    const [components, setComponents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(isGhoul && counts - 7 > 0)\r\n            setTimeout(() => {\r\n                setComponents([ ...components, counts.toString() + ' - 7 = ' + (counts-7).toString()]);\r\n                setCounts(counts-7)\r\n            }, 500); // TODO: Доработать useEffect\r\n    });\r\n\r\n   return(\r\n        <div className={'h-100 row align-items-center'}>\r\n            <h1 className={'display-1 text-center mt-4'}>Кто ты?</h1>\r\n            <button type=\"button\" className=\"btn btn-dark mt-5 mb-5\" onClick={() => {\r\n                setIsGhoul(true);\r\n            }}>\r\n                <h3 className={'display-3'}> Я гуль :(</h3>\r\n            </button>\r\n            <Counting counts={ [components] } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joke;","C:\\Users\\Admin\\Desktop\\react\\first_react\\src\\examples\\Joke\\Counting.jsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":3,"column":8,"nodeType":"34","messageId":"35","endLine":3,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":6,"column":11,"nodeType":"34","messageId":"35","endLine":6,"endColumn":14},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'Joke' is defined but never used.","Identifier","unusedVar","'QUO' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]